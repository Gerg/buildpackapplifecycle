// Automatically generated by MockGen. DO NOT EDIT!
// Source: zip_buildpack.go

package buildpackrunner_test

import (
	gomock "github.com/golang/mock/gomock"
	url "net/url"
)

// Mock of ZipDownloader interface
type MockZipDownloader struct {
	ctrl     *gomock.Controller
	recorder *_MockZipDownloaderRecorder
}

// Recorder for MockZipDownloader (not exported)
type _MockZipDownloaderRecorder struct {
	mock *MockZipDownloader
}

func NewMockZipDownloader(ctrl *gomock.Controller) *MockZipDownloader {
	mock := &MockZipDownloader{ctrl: ctrl}
	mock.recorder = &_MockZipDownloaderRecorder{mock}
	return mock
}

func (_m *MockZipDownloader) EXPECT() *_MockZipDownloaderRecorder {
	return _m.recorder
}

func (_m *MockZipDownloader) DownloadAndExtract(u *url.URL, destination string) (uint64, error) {
	ret := _m.ctrl.Call(_m, "DownloadAndExtract", u, destination)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockZipDownloaderRecorder) DownloadAndExtract(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DownloadAndExtract", arg0, arg1)
}
